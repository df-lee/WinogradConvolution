module tb_winograd_f2_3;
    logic clk;
    logic rst_n;
    logic start;
    logic signed [15:0] input_data [0:8];
    logic signed [15:0] filter_data [0:8];
    logic signed [31:0] output_data [0:3];
    logic done;

    // 实例化 Winograd 模块
    winograd_f2_3 uut (
        .clk(clk),
        .rst_n(rst_n),
        .start(start),
        .input_data(input_data),
        .filter_data(filter_data),
        .output_data(output_data),
        .done(done)
    );

    // 时钟生成
    initial clk = 0;
    always #5 clk = ~clk; // 100MHz 时钟

    // 测试序列
    initial begin
        // 初始化
        rst_n = 0;
        start = 0;
        for (int i = 0; i < 9; i++) begin
            input_data[i] = 16'd0;
            filter_data[i] = 16'd0;
        end

        // 复位
        #10;
        rst_n = 1;

        // 设置输入数据和滤波器数据
        input_data[0] = 16'd1; input_data[1] = 16'd2; input_data[2] = 16'd3;
        input_data[3] = 16'd4; input_data[4] = 16'd5; input_data[5] = 16'd6;
        input_data[6] = 16'd7; input_data[7] = 16'd8; input_data[8] = 16'd9;

        filter_data[0] = 16'd1; filter_data[1] = 16'd0; filter_data[2] = 16'd1;
        filter_data[3] = 16'd0; filter_data[4] = 16'd1; filter_data[5] = 16'd0;
        filter_data[6] = 16'd1; filter_data[7] = 16'd0; filter_data[8] = 16'd1;

        // 启动卷积
        #10;
        start = 1;
        #10;
        start = 0;

        // 等待完成
        wait(done);

        // 打印输出结果
        $display("Output Data:");
        for (int i = 0; i < 4; i++) begin
            $display("output_data[%0d] = %d", i, output_data[i]);
        end

        #20;
        $finish;
    end
endmodule
